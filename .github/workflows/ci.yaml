name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Ubuntu runners
          - os: ubuntu-latest
            runner: ubuntu-latest
            platform: linux
            arch: x86_64
          - os: ubuntu-latest
            runner: ubuntu-24.04-arm
            platform: linux
            arch: arm64

          # Windows runners
          - os: windows-latest
            runner: windows-latest
            platform: windows
            arch: x86_64
          - os: windows-latest
            runner: windows-11-arm
            platform: windows
            arch: arm64

          # macOS runners
          - os: macos-13
            runner: macos-13
            platform: macos
            arch: x86_64
          - os: macos-latest
            runner: macos-latest
            platform: macos
            arch: arm64

    runs-on: ${{ matrix.runner }}
    name: Test on ${{ matrix.platform }}-${{ matrix.arch }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21 (for building)
        uses: actions/setup-java@v5
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Set up JDK 8 (for testing)
        # Java 8 is not available for ARM64 platforms
        if: matrix.arch != 'arm64'
        uses: actions/setup-java@v5
        with:
          java-version: "8"
          distribution: "temurin"

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Create dummy local.properties (Unix)
        if: runner.os != 'Windows'
        run: |
          echo 'sdk.dir=/fake' >> local.properties
          echo 'ndkPath=/fake' >> local.properties

      - name: Create dummy local.properties (Windows)
        if: runner.os == 'Windows'
        run: |
          echo 'sdk.dir=/fake' >> local.properties
          echo 'ndkPath=/fake' >> local.properties
        shell: pwsh

      - name: Set JAVA_HOME to JDK 21 for build
        shell: bash
        run: |
          # Find the JDK 21 environment variable (works for any architecture
          # because the setup-java action sets a JAVA_21_HOME_<architecture>
          # environment variable)
          JAVA_21_HOME=$(env | grep '^JAVA_HOME_21_' | head -n 1 | cut -d= -f2-)
          if [ -n "$JAVA_21_HOME" ]; then
            echo "JAVA_HOME_FOR_BUILD=$JAVA_21_HOME" >> $GITHUB_ENV
            echo "Found JDK 21 at: $JAVA_21_HOME"
          else
            echo "ERROR: Could not find JDK 21 installation"
            echo "Available JAVA_HOME variables:"
            env | grep '^JAVA_HOME' || true
            exit 1
          fi

      - name: Build with Gradle (using JDK 21)
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_FOR_BUILD }}
        with:
          arguments: lib:assemble -Penv=dev --info

      - name: Test with Java 21 runtime
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_FOR_BUILD }}
        with:
          arguments: lib:test -Penv=dev --info

      - name: Test with Java 8 runtime (backward compatibility)
        # Java 8 is not available for ARM64 platforms
        if: matrix.arch != 'arm64'
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_FOR_BUILD }}
        with:
          arguments: lib:testJava8 -Penv=dev --info
